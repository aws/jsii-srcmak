// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp + different entrypoint 1`] = `
Object {
  "Hello.World/AssemblyInfo.cs": "using Amazon.JSII.Runtime.Deputy;

[assembly: JsiiAssembly(\\"csharppackage\\", \\"0.0.0\\", \\"csharppackage-0.0.0.tgz\\")]
",
  "Hello.World/Hello.World.csproj": "<Project Sdk=\\"Microsoft.NET.Sdk\\">
  <PropertyGroup>
    <!-- Package Identification -->
    <Description>csharppackage</Description>
    <PackageId>Hello.World</PackageId>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageVersion>0.0.0</PackageVersion>
    <!-- Additional Metadata -->
    <Authors>generated@generated.com</Authors>
    <Language>en-US</Language>
    <ProjectUrl>http://generated</ProjectUrl>
    <RepositoryUrl>http://generated</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <!-- Build Configuration -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <Nullable>enable</Nullable>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include=\\"csharppackage-0.0.0.tgz\\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include=\\"Amazon.JSII.Runtime\\" Version=\\"[1.17.1,2.0.0)\\" />
  </ItemGroup>
  <PropertyGroup>
    <!-- Silence [Obsolete] warnings -->
    <NoWarn>0612,0618</NoWarn>
    <!-- Treat warnings symptomatic of code generation bugs as errors -->
    <WarningsAsErrors>0108,0109</WarningsAsErrors>
  </PropertyGroup>
</Project>

",
  "Hello.World/Hello/World/Hello.cs": "using Amazon.JSII.Runtime.Deputy;

#pragma warning disable CS0672,CS0809,CS1591

namespace Hello.World
{
    [JsiiClass(nativeType: typeof(Hello.World.Hello), fullyQualifiedName: \\"csharppackage.Hello\\")]
    public class Hello : DeputyBase
    {
        public Hello(): base(new DeputyProps(System.Array.Empty<object?>()))
        {
        }

        /// <summary>Used by jsii to construct an instance of this class from a Javascript-owned object reference</summary>
        /// <param name=\\"reference\\">The Javascript-owned object reference</param>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        protected Hello(ByRefValue reference): base(reference)
        {
        }

        /// <summary>Used by jsii to construct an instance of this class from DeputyProps</summary>
        /// <param name=\\"props\\">The deputy props</param>
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        protected Hello(DeputyProps props): base(props)
        {
        }

        [JsiiMethod(name: \\"add\\", returnsJson: \\"{\\\\\\"type\\\\\\":{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}}\\", parametersJson: \\"[{\\\\\\"name\\\\\\":\\\\\\"ops\\\\\\",\\\\\\"type\\\\\\":{\\\\\\"fqn\\\\\\":\\\\\\"csharppackage.Operands\\\\\\"}}]\\")]
        public virtual double Add(Hello.World.IOperands ops)
        {
            return InvokeInstanceMethod<double>(new System.Type[]{typeof(Hello.World.IOperands)}, new object[]{ops})!;
        }
    }
}
",
  "Hello.World/Hello/World/IOperands.cs": "using Amazon.JSII.Runtime.Deputy;

#pragma warning disable CS0672,CS0809,CS1591

namespace Hello.World
{
    [JsiiInterface(nativeType: typeof(IOperands), fullyQualifiedName: \\"csharppackage.Operands\\")]
    public interface IOperands
    {
        [JsiiProperty(name: \\"lhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\")]
        double Lhs
        {
            get;
        }

        [JsiiProperty(name: \\"rhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\")]
        double Rhs
        {
            get;
        }

        [JsiiTypeProxy(nativeType: typeof(IOperands), fullyQualifiedName: \\"csharppackage.Operands\\")]
        internal sealed class _Proxy : DeputyBase, Hello.World.IOperands
        {
            private _Proxy(ByRefValue reference): base(reference)
            {
            }

            [JsiiProperty(name: \\"lhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\")]
            public double Lhs
            {
                get => GetInstanceProperty<double>()!;
            }

            [JsiiProperty(name: \\"rhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\")]
            public double Rhs
            {
                get => GetInstanceProperty<double>()!;
            }
        }
    }
}
",
  "Hello.World/Hello/World/Internal/DependencyResolution/Anchor.cs": "#pragma warning disable CS0672,CS0809,CS1591

namespace Hello.World.Internal.DependencyResolution
{
    public sealed class Anchor
    {
        public Anchor()
        {
        }
    }
}
",
  "Hello.World/Hello/World/Operands.cs": "using Amazon.JSII.Runtime.Deputy;

#pragma warning disable CS0672,CS0809,CS1591

namespace Hello.World
{
    #pragma warning disable CS8618

    [JsiiByValue(fqn: \\"csharppackage.Operands\\")]
    public class Operands : Hello.World.IOperands
    {
        [JsiiProperty(name: \\"lhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\", isOverride: true)]
        public double Lhs
        {
            get;
            set;
        }

        [JsiiProperty(name: \\"rhs\\", typeJson: \\"{\\\\\\"primitive\\\\\\":\\\\\\"number\\\\\\"}\\", isOverride: true)]
        public double Rhs
        {
            get;
            set;
        }
    }
}
",
}
`;

exports[`golang + different entrypoint 1`] = `
Object {
  "helloworld/go.mod": "module helloworld/helloworld

go 1.15

require (
	github.com/aws/jsii-runtime-go v1.17.1
)
",
  "helloworld/helloworld.go": "// helloworld
package helloworld

import (
	_jsii_ \\"github.com/aws/jsii-runtime-go\\"
	_init_ \\"helloworld/helloworld/jsii\\"
	\\"reflect\\"
)

// Class interface
type HelloIface interface {
	Add(ops OperandsIface) float64
}

// Struct proxy
type Hello struct {
}

func NewHello() HelloIface {
	_init_.Initialize()
	self := Hello{}
	_jsii_.Create(
		\\"helloworld.Hello\\",
		[]interface{}{},
		[]_jsii_.FQN{},
		[]_jsii_.Override{},
		&self,
	)
	return &self
}

func (h *Hello) Add(ops OperandsIface) float64 {
	var returns float64
	_jsii_.Invoke(
		h,
		\\"add\\",
		[]interface{}{ops},
		true,
		&returns,
		map[reflect.Type]reflect.Type{},
	)
	return returns
}

// OperandsIface is the public interface for the custom type Operands
type OperandsIface interface {
	GetLhs() float64
	GetRhs() float64
}

// Struct proxy
type Operands struct {
	Lhs float64 \`json:\\"lhs\\"\`
	Rhs float64 \`json:\\"rhs\\"\`
}

func (o *Operands) GetLhs() float64 {
	var returns float64
	_jsii_.Get(
		o,
		\\"lhs\\",
		&returns,
		map[reflect.Type]reflect.Type{},
	)
	return returns
}

func (o *Operands) GetRhs() float64 {
	var returns float64
	_jsii_.Get(
		o,
		\\"rhs\\",
		&returns,
		map[reflect.Type]reflect.Type{},
	)
	return returns
}


",
  "helloworld/jsii/jsii.go": "package jsii

import (
	rt \\"github.com/aws/jsii-runtime-go\\"
	\\"sync\\"
)

var once sync.Once

// Initialize performs the necessary work for the enclosing
// module to be loaded in the jsii kernel.
func Initialize() {
	once.Do(func(){
		// Load this library into the kernel
		rt.Load(\\"helloworld\\", \\"0.0.0\\", tarball)
	})
}
",
  "helloworld/jsii/tarball.embedded.go": "package jsii

var tarball = []byte{
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0xed, 0x18, 0x6b, 0x6f, 0xda, 0x48,
	0xb0, 0x9f, 0xf9, 0x15, 0x96, 0xef, 0x4b, 0xa3, 0xe6, 0xc0, 0x36, 0x8f, 0x84, 0x44, 0x91, 0xae,
	0x24, 0x01, 0x4c, 0x12, 0x52, 0x48, 0xc2, 0xeb, 0x54, 0x55, 0xeb, 0xf5, 0x02, 0x0b, 0x7e, 0xd5,
	0xbb, 0x4e, 0x30, 0x15, 0xff, 0xbd, 0x63, 0x1b, 0x1b, 0xf3, 0x48, 0x72, 0xd5, 0x25, 0xed, 0x55,
	0x97, 0x91, 0xc0, 0xbb, 0x3b, 0xb3, 0xf3, 0xda, 0xd9, 0xf1, 0x78, 0x1c, 0x84, 0xa7, 0x68, 0x44,
	0x72, 0xd9, 0x09, 0xa3, 0xf4, 0xdd, 0xeb, 0x80, 0x24, 0x49, 0xa5, 0x42, 0x41, 0xd8, 0xb5, 0x0e,
	0x50, 0xc8, 0x97, 0x64, 0xe1, 0x5d, 0xbe, 0x58, 0x92, 0x64, 0xb9, 0x54, 0x92, 0x80, 0x4e, 0x92,
	0x25, 0x45, 0xc9, 0xc3, 0xf3, 0x95, 0xf4, 0x59, 0x03, 0x8f, 0x71, 0xe4, 0x82, 0x2a, 0xff, 0x96,
	0x4f, 0x64, 0x8c, 0x90, 0x3c, 0x7f, 0x13, 0xf8, 0x96, 0x11, 0x04, 0x11, 0x79, 0x7c, 0x6c, 0xbb,
	0xe2, 0x91, 0x10, 0xcc, 0x60, 0x6e, 0x21, 0x93, 0xc0, 0x4c, 0x1c, 0x11, 0x8b, 0xb8, 0x88, 0x13,
	0xfd, 0xaf, 0x64, 0x94, 0xc5, 0xb6, 0x29, 0xee, 0x47, 0x64, 0xae, 0x6d, 0x10, 0x06, 0x74, 0x7f,
	0x87, 0xd3, 0x15, 0x9f, 0x70, 0xfa, 0x19, 0xfe, 0x17, 0x01, 0xa1, 0xa8, 0x13, 0x86, 0x5d, 0xea,
	0x70, 0x6a, 0x5b, 0x01, 0xd3, 0x31, 0x31, 0x0c, 0xfb, 0xc1, 0x76, 0x0d, 0x3d, 0xe4, 0x23, 0x8e,
	0x6d, 0x93, 0x38, 0x10, 0x82, 0x21, 0x8e, 0x73, 0xe7, 0x28, 0x97, 0x4b, 0xa4, 0x45, 0x14, 0x41,
	0x68, 0x76, 0x88, 0xcb, 0x96, 0x0c, 0xe4, 0xac, 0x7c, 0x90, 0x95, 0x85, 0xf7, 0x9a, 0x47, 0x0d,
	0x5d, 0x50, 0x34, 0x84, 0x8b, 0x43, 0x7d, 0x2f, 0x22, 0x35, 0x28, 0x26, 0x16, 0x0b, 0x79, 0x7d,
	0x74, 0x10, 0x1e, 0x93, 0x3f, 0x95, 0xac, 0x14, 0xa1, 0x4c, 0xc2, 0x91, 0x8e, 0x38, 0x5a, 0x99,
	0x19, 0xf0, 0x4d, 0x66, 0x30, 0x87, 0x0d, 0x26, 0x9a, 0xa6, 0x56, 0x02, 0xed, 0x10, 0x3b, 0x23,
	0x43, 0xe4, 0x19, 0x5c, 0xb5, 0x38, 0x71, 0x87, 0x08, 0x87, 0x26, 0x73, 0xd7, 0x23, 0x4b, 0xa2,
	0x45, 0x26, 0xfe, 0x8f, 0xcc, 0x8d, 0x9d, 0xb7, 0x69, 0xa7, 0x4b, 0x1c, 0x9b, 0x51, 0x6e, 0xbb,
	0xfe, 0x4a, 0x03, 0xee, 0x3b, 0x91, 0xa3, 0x29, 0x8f, 0x9d, 0xea, 0xb9, 0xc6, 0x4e, 0x4f, 0x24,
	0xfc, 0x19, 0x58, 0x65, 0x06, 0x56, 0x84, 0xfa, 0xe7, 0xa4, 0xac, 0x2c, 0xc5, 0x26, 0x42, 0x24,
	0x8f, 0x08, 0x67, 0x2b, 0xfe, 0x23, 0x3b, 0x6d, 0x9f, 0x69, 0xeb, 0x9e, 0x41, 0x9a, 0xdb, 0xfa,
	0x45, 0x16, 0xec, 0xc7, 0x5e, 0x49, 0xef, 0xb1, 0x1c, 0x73, 0x27, 0x71, 0xa2, 0x4e, 0x60, 0x42,
	0x4a, 0xe2, 0x8a, 0x30, 0x5b, 0x0f, 0x86, 0x69, 0x5e, 0x88, 0x31, 0x62, 0x6a, 0x86, 0xbf, 0xc3,
	0x3b, 0x21, 0x7e, 0xf8, 0x75, 0x23, 0x40, 0x96, 0x2c, 0x12, 0x02, 0x6a, 0x51, 0x4e, 0x91, 0x41,
	0xe7, 0x24, 0x0c, 0xd6, 0x45, 0x82, 0x98, 0x52, 0x4b, 0x0f, 0xb6, 0x62, 0x03, 0x64, 0xac, 0xe8,
	0x0d, 0x1b, 0xa3, 0x20, 0xec, 0x54, 0xeb, 0x2a, 0x34, 0x7d, 0xfd, 0x68, 0x87, 0xd4, 0x20, 0xf1,
	0x61, 0xe9, 0x74, 0x38, 0x24, 0x2e, 0xb1, 0x78, 0x0e, 0x7e, 0xae, 0x9f, 0xe5, 0x2b, 0x2e, 0x61,
	0x54, 0x59, 0x01, 0xd5, 0x41, 0x7c, 0xe2, 0x89, 0x00, 0x88, 0xa9, 0xb1, 0xad, 0xa7, 0xef, 0x80,
	0x90, 0x92, 0xf0, 0x9c, 0x06, 0x3f, 0xa6, 0x45, 0x5a, 0x93, 0xc3, 0xd4, 0xea, 0x22, 0x4d, 0x92,
	0x44, 0x1f, 0xd2, 0xf5, 0xb5, 0xbd, 0x10, 0xdc, 0x2e, 0xa0, 0x20, 0x84, 0xd7, 0xb5, 0xdd, 0xd4,
	0x78, 0x8d, 0x89, 0xed, 0x6c, 0x2a, 0xb0, 0x8a, 0xd9, 0xcd, 0x4d, 0x3b, 0xcf, 0xef, 0xda, 0x81,
	0xe8, 0xb5, 0xc0, 0x41, 0x1b, 0xc4, 0x8b, 0xcc, 0x63, 0xb3, 0xcf, 0x6b, 0x4a, 0xbb, 0x84, 0x7b,
	0xae, 0xc5, 0xb6, 0xbd, 0xf6, 0x88, 0x12, 0xa2, 0xe3, 0x52, 0x13, 0x62, 0xe4, 0x3e, 0x54, 0xdf,
	0xf2, 0x4c, 0x8d, 0xb8, 0xe2, 0xa3, 0xb2, 0x56, 0xe3, 0x78, 0x94, 0x48, 0x4f, 0x5c, 0x10, 0x45,
	0xe0, 0xda, 0x05, 0xd9, 0x65, 0xdf, 0x0f, 0x44, 0x79, 0x90, 0x83, 0x96, 0xea, 0x07, 0x59, 0xe4,
	0x89, 0xe8, 0x4f, 0xb8, 0x6f, 0xc5, 0x39, 0x8d, 0x73, 0xd1, 0xab, 0xc5, 0xba, 0xb2, 0x15, 0xeb,
	0xf1, 0xf6, 0x6d, 0xad, 0x1c, 0xd7, 0x86, 0x35, 0x4e, 0xc9, 0x13, 0x17, 0x01, 0x69, 0x8c, 0xbb,
	0x08, 0xf3, 0x0d, 0xab, 0x43, 0x1c, 0x35, 0x4d, 0x8f, 0x23, 0xcd, 0xd8, 0x74, 0xc9, 0xf3, 0x76,
	0xfd, 0x98, 0x6d, 0x69, 0xfb, 0xf2, 0xcf, 0xde, 0x20, 0x63, 0xbc, 0xbe, 0x77, 0x77, 0xcc, 0x3d,
	0x17, 0x71, 0xa9, 0x18, 0xdb, 0xff, 0x3d, 0x3c, 0x53, 0x78, 0xd6, 0x33, 0xee, 0x4b, 0x7b, 0x26,
	0xbe, 0x7d, 0x1b, 0xaf, 0x96, 0xfb, 0xd5, 0x3b, 0x1f, 0x5e, 0x71, 0xf1, 0x4b, 0x6e, 0x48, 0xad,
	0x11, 0x71, 0x81, 0xb9, 0xc5, 0xc3, 0xfb, 0x72, 0x38, 0x71, 0x2e, 0x2b, 0x73, 0xe5, 0x96, 0x37,
	0x94, 0xea, 0xe1, 0x07, 0xdd, 0xf6, 0x7d, 0xf3, 0xe2, 0xe3, 0xd7, 0xf2, 0x45, 0x97, 0x8f, 0x15,
	0x5c, 0xc1, 0xb7, 0x66, 0xa9, 0x5a, 0xea, 0xd7, 0x1c, 0xe5, 0x4c, 0x3d, 0x11, 0x33, 0x8b, 0xcc,
	0xaf, 0x2e, 0xb8, 0xfe, 0x63, 0xe0, 0x2c, 0xeb, 0xff, 0xcd, 0xf0, 0x98, 0xb0, 0x97, 0x93, 0xf1,
	0x74, 0xfd, 0x2f, 0x17, 0xf3, 0x5b, 0xf5, 0xbf, 0x72, 0xa0, 0x14, 0xdf, 0xea, 0xff, 0x9f, 0x01,
	0xa2, 0xc7, 0x88, 0x00, 0x09, 0x88, 0x42, 0x02, 0x3a, 0xce, 0x5c, 0x6b, 0x13, 0x82, 0x79, 0x56,
	0x27, 0x70, 0xc9, 0xc8, 0xa7, 0x28, 0xad, 0xfb, 0xef, 0xc9, 0xcc, 0xb1, 0x5d, 0xce, 0xf6, 0x05,
	0xf1, 0xcb, 0x17, 0xc2, 0x96, 0xc9, 0x66, 0x5f, 0xf8, 0x26, 0xdc, 0x23, 0xc3, 0x23, 0x51, 0x66,
	0x12, 0x16, 0x7b, 0xc7, 0x99, 0x25, 0x61, 0x54, 0xb6, 0x09, 0x27, 0xc2, 0xbd, 0x4d, 0x75, 0x41,
	0x3a, 0xce, 0x84, 0x65, 0x99, 0x10, 0xad, 0x46, 0x49, 0x02, 0xca, 0x93, 0xf7, 0x50, 0x5d, 0xec,
	0xa5, 0x72, 0x46, 0xf4, 0xae, 0x17, 0x60, 0x35, 0x0b, 0xa9, 0x57, 0xf8, 0x10, 0x8e, 0x20, 0xd5,
	0x1c, 0x2f, 0xb3, 0xc2, 0x62, 0x8b, 0x7d, 0xf8, 0x3c, 0xce, 0xe4, 0x72, 0x7f, 0x08, 0xcc, 0xf6,
	0x5c, 0x4c, 0xae, 0x90, 0xe3, 0x40, 0x76, 0xb8, 0x6b, 0x5f, 0x9e, 0x04, 0x6f, 0xd9, 0x23, 0x98,
	0xc2, 0x07, 0x41, 0x98, 0x24, 0x73, 0x13, 0x66, 0x5b, 0xc7, 0x1a, 0x62, 0xa4, 0x54, 0xd8, 0x27,
	0x7e, 0x43, 0x19, 0xf4, 0x1a, 0x73, 0xd4, 0x2d, 0x7b, 0xea, 0xc4, 0x9e, 0x5f, 0x9e, 0x36, 0x4c,
	0xd4, 0x9d, 0x19, 0x30, 0xa6, 0x83, 0x6e, 0x51, 0xc2, 0xd6, 0xd4, 0x43, 0xd6, 0x15, 0x85, 0xf5,
	0xb9, 0x96, 0xef, 0xf8, 0x7d, 0xa5, 0x73, 0xa3, 0x29, 0x65, 0x29, 0xc0, 0xab, 0xf4, 0x81, 0x62,
	0xa5, 0x2c, 0x63, 0xb3, 0x69, 0x60, 0x5f, 0x2d, 0x75, 0xfd, 0x86, 0xa1, 0x59, 0x6d, 0x9f, 0xdc,
	0xc0, 0x3e, 0xbf, 0xa1, 0xc3, 0x1e, 0xaf, 0xdf, 0x95, 0x23, 0x9c, 0x2c, 0x31, 0xd5, 0x94, 0xc7,
	0xb8, 0x5e, 0x71, 0x34, 0x53, 0x9f, 0x07, 0xfb, 0xaf, 0xe7, 0xec, 0xa0, 0x75, 0x57, 0x6d, 0xde,
	0xdc, 0xcc, 0x9a, 0xf0, 0x1c, 0x5f, 0x9e, 0xf3, 0x4a, 0xeb, 0x8e, 0x1d, 0xdc, 0xdc, 0x55, 0xcf,
	0x3a, 0xa7, 0xb3, 0x3a, 0xac, 0xd5, 0x2f, 0xcf, 0x9b, 0xb0, 0x76, 0xc5, 0xda, 0x52, 0xb5, 0xd2,
	0xbf, 0xe5, 0xed, 0xd6, 0x5d, 0x53, 0x6a, 0xd1, 0xd9, 0x27, 0xc0, 0x7d, 0xba, 0x3c, 0xd7, 0x01,
	0x87, 0x59, 0x0b, 0x70, 0x2d, 0x3f, 0xa6, 0x8f, 0xd6, 0x02, 0xfa, 0xb6, 0x3f, 0x3b, 0x83, 0xb5,
	0xb3, 0x35, 0xba, 0x39, 0x6f, 0x00, 0xbf, 0x39, 0xf0, 0x08, 0x71, 0xd7, 0x12, 0xf0, 0x97, 0xfa,
	0x81, 0x1e, 0x17, 0xed, 0xd3, 0xd9, 0xbc, 0x35, 0xad, 0x36, 0x5a, 0xbe, 0xca, 0x54, 0xab, 0x79,
	0xaf, 0xf7, 0x1a, 0x93, 0x41, 0xaf, 0x79, 0xa6, 0x29, 0x45, 0x29, 0xf0, 0x85, 0x3a, 0x71, 0x34,
	0xd5, 0x98, 0x79, 0xea, 0xe9, 0xc7, 0x91, 0x5a, 0xeb, 0x14, 0x70, 0xad, 0xec, 0xeb, 0xa7, 0x60,
	0x8f, 0xd5, 0x36, 0xb0, 0x39, 0x18, 0xf7, 0x95, 0xbb, 0xd1, 0x6d, 0xbe, 0x02, 0xe3, 0xaa, 0x37,
	0xa8, 0x5f, 0x8d, 0x88, 0xbc, 0xa4, 0x85, 0x1f, 0x36, 0x3b, 0xe3, 0x41, 0xad, 0xec, 0x69, 0xf5,
	0xe9, 0x48, 0xab, 0x8d, 0xe7, 0xd7, 0xb4, 0xe2, 0xe9, 0x5d, 0x99, 0x0e, 0x7a, 0xea, 0x41, 0xaf,
	0x56, 0x18, 0x45, 0x74, 0x15, 0x7f, 0xd0, 0xad, 0x4e, 0x41, 0x1e, 0x23, 0x37, 0x15, 0x1f, 0xd5,
	0xaf, 0x4a, 0x6a, 0xad, 0x28, 0x6b, 0xdd, 0x86, 0x81, 0x27, 0x1c, 0x6b, 0x34, 0xa4, 0x29, 0xf7,
	0x6a, 0xc5, 0x78, 0x6c, 0x90, 0x7a, 0xe5, 0x1e, 0x5b, 0xad, 0x51, 0x5f, 0x99, 0x8d, 0x71, 0xfe,
	0x6a, 0x74, 0x53, 0xeb, 0x30, 0xad, 0x76, 0xb8, 0x2e, 0xbb, 0xde, 0xa1, 0x5a, 0xcd, 0x98, 0xa8,
	0xb5, 0xea, 0x74, 0x70, 0x3a, 0xbe, 0xc7, 0x01, 0xdf, 0xf3, 0xf2, 0x03, 0x9c, 0xfb, 0x58, 0x33,
	0xdb, 0xf3, 0x8b, 0x5b, 0x7b, 0xa4, 0x59, 0x1d, 0xde, 0x37, 0x3b, 0xbe, 0x5a, 0x8f, 0xe5, 0x24,
	0x7a, 0x4b, 0xe0, 0x07, 0x4f, 0xad, 0x95, 0x1f, 0xb0, 0x5f, 0x64, 0xa0, 0xd3, 0xe8, 0xc2, 0xaf,
	0x04, 0x3c, 0x3c, 0x6c, 0x82, 0x1d, 0x29, 0x39, 0xc3, 0xce, 0x72, 0x5c, 0x97, 0x63, 0x1e, 0xb4,
	0xd7, 0x93, 0x4e, 0x7e, 0xf5, 0xc5, 0xfe, 0x87, 0x10, 0xe7, 0xff, 0xe5, 0x33, 0x1b, 0x5c, 0x93,
	0x97, 0x96, 0xf1, 0x74, 0xfe, 0x8f, 0x70, 0xeb, 0xf9, 0x5f, 0x2e, 0x16, 0x95, 0xb7, 0xfc, 0xff,
	0x33, 0xe0, 0xdb, 0x53, 0x2d, 0x8b, 0xdd, 0x05, 0x58, 0xd2, 0x2d, 0x7a, 0xb2, 0x3f, 0x24, 0x9a,
	0x88, 0x5a, 0xbb, 0x0a, 0xcf, 0x09, 0x13, 0xd7, 0x1a, 0x07, 0x5b, 0x04, 0x7a, 0x5c, 0x9b, 0x3e,
	0xd5, 0xcd, 0xd9, 0xd5, 0x4d, 0x79, 0xac, 0x75, 0xb2, 0xbf, 0xdd, 0x6c, 0x49, 0x6a, 0xcc, 0xb5,
	0x1e, 0x90, 0x68, 0x7b, 0x5c, 0xa7, 0x6e, 0xa4, 0x14, 0x4b, 0x5a, 0x32, 0x9b, 0x6d, 0x95, 0xcd,
	0xc6, 0xca, 0xb3, 0xad, 0x95, 0xed, 0x26, 0x91, 0x4e, 0x1c, 0x62, 0xe9, 0xc4, 0xc2, 0xd1, 0x47,
	0x53, 0xd4, 0xca, 0x10, 0x1d, 0x42, 0xdc, 0xb3, 0x4d, 0x4c, 0x66, 0xf1, 0x9a, 0xe7, 0xff, 0x58,
	0xfd, 0x17, 0x1c, 0xc2, 0x4b, 0xc9, 0x78, 0xe6, 0xfe, 0x2b, 0xca, 0x56, 0xfd, 0x97, 0x97, 0x8b,
	0x85, 0xb7, 0xfb, 0xff, 0x33, 0x20, 0xaa, 0xa9, 0x84, 0xa4, 0xa1, 0x20, 0xc4, 0x9f, 0xf7, 0xcb,
	0xe8, 0x76, 0x09, 0xd2, 0x6d, 0xcb, 0xf0, 0x05, 0xa8, 0xc9, 0x8e, 0x84, 0xe8, 0x2b, 0xee, 0x78,
	0x1d, 0xe3, 0xa6, 0x31, 0x71, 0x95, 0x26, 0xe8, 0x04, 0xaa, 0x3e, 0x97, 0x08, 0x8f, 0xd6, 0x7e,
	0x47, 0x89, 0xa8, 0xbd, 0xf4, 0xf6, 0x5f, 0xed, 0x90, 0x37, 0x78, 0x83, 0x37, 0x78, 0x83, 0xff,
	0x09, 0x7c, 0x07, 0xe7, 0xc3, 0xc1, 0x14, 0x00, 0x1e, 0x00, 0x00,
}

func init() {
	if len(tarball) != 1531 {
		panic(\\"Tarball data does not have expected length (1531 bytes)\\")
	}
}
",
}
`;

exports[`java + different entrypoint 1`] = `
Object {
  "src/main/java/hello/world/$Module.java": "package hello.world;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.Reader;
import java.io.UncheckedIOException;

import java.nio.charset.StandardCharsets;

import java.util.HashMap;
import java.util.Map;

import software.amazon.jsii.JsiiModule;

@software.amazon.jsii.Internal
public final class $Module extends JsiiModule {
    private static final Map<String, String> MODULE_TYPES = load();

    private static Map<String, String> load() {
        final Map<String, String> result = new HashMap<>();
        final ClassLoader cl = $Module.class.getClassLoader();
        try (final InputStream is = cl.getResourceAsStream(\\"hello/world/$Module.txt\\");
             final Reader rd = new InputStreamReader(is, StandardCharsets.UTF_8);
             final BufferedReader br = new BufferedReader(rd)) {
            br.lines()
              .filter(line -> !line.trim().isEmpty())
              .forEach(line ->  {
                final String[] parts = line.split(\\"=\\", 2);
                final String fqn = parts[0];
                final String className = parts[1];
                result.put(fqn, className);
            });
        }
        catch (final IOException exception) {
            throw new UncheckedIOException(exception);
        }
        return result;
    }

    private final Map<String, Class<?>> cache = new HashMap<>();

    public $Module() {
        super(\\"javapackage\\", \\"0.0.0\\", $Module.class, \\"javapackage@0.0.0.jsii.tgz\\");
    }

    @Override
    protected Class<?> resolveClass(final String fqn) throws ClassNotFoundException {
        if (!MODULE_TYPES.containsKey(fqn)) {
            throw new ClassNotFoundException(\\"Unknown JSII type: \\" + fqn);
        }
        String className = MODULE_TYPES.get(fqn);
        if (!this.cache.containsKey(className)) {
            this.cache.put(className, this.findClass(className));
        }
        return this.cache.get(className);
    }

    private Class<?> findClass(final String binaryName) {
        try {
            return Class.forName(binaryName);
        }
        catch (final ClassNotFoundException exception) {
            throw new RuntimeException(exception);
        }
    }
}
",
  "src/main/java/hello/world/Hello.java": "package hello.world;


@software.amazon.jsii.Jsii(module = hello.world.$Module.class, fqn = \\"javapackage.Hello\\")
public class Hello extends software.amazon.jsii.JsiiObject {

    protected Hello(final software.amazon.jsii.JsiiObjectRef objRef) {
        super(objRef);
    }

    protected Hello(final software.amazon.jsii.JsiiObject.InitializationMode initializationMode) {
        super(initializationMode);
    }

    public Hello() {
        super(software.amazon.jsii.JsiiObject.InitializationMode.JSII);
        software.amazon.jsii.JsiiEngine.getInstance().createNewObject(this);
    }

    public @org.jetbrains.annotations.NotNull java.lang.Number add(final @org.jetbrains.annotations.NotNull hello.world.Operands ops) {
        return software.amazon.jsii.Kernel.call(this, \\"add\\", software.amazon.jsii.NativeType.forClass(java.lang.Number.class), new Object[] { java.util.Objects.requireNonNull(ops, \\"ops is required\\") });
    }
}
",
  "src/main/java/hello/world/Operands.java": "package hello.world;


@software.amazon.jsii.Jsii(module = hello.world.$Module.class, fqn = \\"javapackage.Operands\\")
@software.amazon.jsii.Jsii.Proxy(Operands.Jsii$Proxy.class)
public interface Operands extends software.amazon.jsii.JsiiSerializable {

    @org.jetbrains.annotations.NotNull java.lang.Number getLhs();

    @org.jetbrains.annotations.NotNull java.lang.Number getRhs();

    /**
     * @return a {@link Builder} of {@link Operands}
     */
    static Builder builder() {
        return new Builder();
    }
    /**
     * A builder for {@link Operands}
     */
    public static final class Builder implements software.amazon.jsii.Builder<Operands> {
        private java.lang.Number lhs;
        private java.lang.Number rhs;

        /**
         * Sets the value of {@link Operands#getLhs}
         * @param lhs the value to be set. This parameter is required.
         * @return {@code this}
         */
        public Builder lhs(java.lang.Number lhs) {
            this.lhs = lhs;
            return this;
        }

        /**
         * Sets the value of {@link Operands#getRhs}
         * @param rhs the value to be set. This parameter is required.
         * @return {@code this}
         */
        public Builder rhs(java.lang.Number rhs) {
            this.rhs = rhs;
            return this;
        }

        /**
         * Builds the configured instance.
         * @return a new instance of {@link Operands}
         * @throws NullPointerException if any required attribute was not provided
         */
        @Override
        public Operands build() {
            return new Jsii$Proxy(lhs, rhs);
        }
    }

    /**
     * An implementation for {@link Operands}
     */
    @software.amazon.jsii.Internal
    final class Jsii$Proxy extends software.amazon.jsii.JsiiObject implements Operands {
        private final java.lang.Number lhs;
        private final java.lang.Number rhs;

        /**
         * Constructor that initializes the object based on values retrieved from the JsiiObject.
         * @param objRef Reference to the JSII managed object.
         */
        protected Jsii$Proxy(final software.amazon.jsii.JsiiObjectRef objRef) {
            super(objRef);
            this.lhs = software.amazon.jsii.Kernel.get(this, \\"lhs\\", software.amazon.jsii.NativeType.forClass(java.lang.Number.class));
            this.rhs = software.amazon.jsii.Kernel.get(this, \\"rhs\\", software.amazon.jsii.NativeType.forClass(java.lang.Number.class));
        }

        /**
         * Constructor that initializes the object based on literal property values passed by the {@link Builder}.
         */
        protected Jsii$Proxy(final java.lang.Number lhs, final java.lang.Number rhs) {
            super(software.amazon.jsii.JsiiObject.InitializationMode.JSII);
            this.lhs = java.util.Objects.requireNonNull(lhs, \\"lhs is required\\");
            this.rhs = java.util.Objects.requireNonNull(rhs, \\"rhs is required\\");
        }

        @Override
        public final java.lang.Number getLhs() {
            return this.lhs;
        }

        @Override
        public final java.lang.Number getRhs() {
            return this.rhs;
        }

        @Override
        @software.amazon.jsii.Internal
        public com.fasterxml.jackson.databind.JsonNode $jsii$toJson() {
            final com.fasterxml.jackson.databind.ObjectMapper om = software.amazon.jsii.JsiiObjectMapper.INSTANCE;
            final com.fasterxml.jackson.databind.node.ObjectNode data = com.fasterxml.jackson.databind.node.JsonNodeFactory.instance.objectNode();

            data.set(\\"lhs\\", om.valueToTree(this.getLhs()));
            data.set(\\"rhs\\", om.valueToTree(this.getRhs()));

            final com.fasterxml.jackson.databind.node.ObjectNode struct = com.fasterxml.jackson.databind.node.JsonNodeFactory.instance.objectNode();
            struct.set(\\"fqn\\", om.valueToTree(\\"javapackage.Operands\\"));
            struct.set(\\"data\\", data);

            final com.fasterxml.jackson.databind.node.ObjectNode obj = com.fasterxml.jackson.databind.node.JsonNodeFactory.instance.objectNode();
            obj.set(\\"$jsii.struct\\", struct);

            return obj;
        }

        @Override
        public final boolean equals(final Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;

            Operands.Jsii$Proxy that = (Operands.Jsii$Proxy) o;

            if (!lhs.equals(that.lhs)) return false;
            return this.rhs.equals(that.rhs);
        }

        @Override
        public final int hashCode() {
            int result = this.lhs.hashCode();
            result = 31 * result + (this.rhs.hashCode());
            return result;
        }
    }
}
",
  "src/main/resources/hello/world/$Module.txt": "javapackage.Hello=hello.world.Hello
javapackage.Operands=hello.world.Operands
",
}
`;

exports[`outputJsii can be used to look at the jsii file 1`] = `
Object {
  "author": Object {
    "name": "generated@generated.com",
    "roles": Array [
      "author",
    ],
  },
  "description": "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6",
  "fingerprint": "Gd4GMfJopxt1xnckAq5wEWrN2c14HJbbRsxw2kx2Vlk=",
  "homepage": "http://generated",
  "jsiiVersion": "1.17.1 (build 2bac5fd)",
  "license": "Apache-2.0",
  "metadata": Object {
    "jsii": Object {
      "pacmak": Object {
        "hasDefaultInterfaces": true,
      },
    },
  },
  "name": "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6",
  "repository": Object {
    "type": "git",
    "url": "http://generated",
  },
  "schema": "jsii/0.10.0",
  "targets": Object {
    "js": Object {
      "npm": "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6",
    },
  },
  "types": Object {
    "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6.Foo": Object {
      "assembly": "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6",
      "fqn": "1bc04b5291c26a46d918139138b992d2de976d6851d0893b0476b85bfbdfc6e6.Foo",
      "initializer": Object {},
      "kind": "class",
      "locationInModule": Object {
        "filename": "index.ts",
        "line": 2,
      },
      "methods": Array [
        Object {
          "locationInModule": Object {
            "filename": "index.ts",
            "line": 3,
          },
          "name": "hello",
          "returns": Object {
            "type": Object {
              "primitive": "string",
            },
          },
          "static": true,
        },
      ],
      "name": "Foo",
    },
  },
  "version": "0.0.0",
}
`;

exports[`python + different entrypoint + submodule 1`] = `
Object {
  "my_python_module/submodule/__init__.py": "import abc
import builtins
import datetime
import enum
import typing

import jsii
import publication
import typing_extensions

from ._jsii import *


class Hello(metaclass=jsii.JSIIMeta, jsii_type=\\"pythonpackage.Hello\\"):
    def __init__(self) -> None:
        jsii.create(Hello, self, [])

    @jsii.member(jsii_name=\\"add\\")
    def add(self, *, lhs: jsii.Number, rhs: jsii.Number) -> jsii.Number:
        \\"\\"\\"
        :param lhs: -
        :param rhs: -
        \\"\\"\\"
        ops = Operands(lhs=lhs, rhs=rhs)

        return jsii.invoke(self, \\"add\\", [ops])


@jsii.data_type(
    jsii_type=\\"pythonpackage.Operands\\",
    jsii_struct_bases=[],
    name_mapping={\\"lhs\\": \\"lhs\\", \\"rhs\\": \\"rhs\\"},
)
class Operands:
    def __init__(self, *, lhs: jsii.Number, rhs: jsii.Number) -> None:
        \\"\\"\\"
        :param lhs: -
        :param rhs: -
        \\"\\"\\"
        self._values: typing.Dict[str, typing.Any] = {
            \\"lhs\\": lhs,
            \\"rhs\\": rhs,
        }

    @builtins.property
    def lhs(self) -> jsii.Number:
        result = self._values.get(\\"lhs\\")
        assert result is not None, \\"Required property 'lhs' is missing\\"
        return result

    @builtins.property
    def rhs(self) -> jsii.Number:
        result = self._values.get(\\"rhs\\")
        assert result is not None, \\"Required property 'rhs' is missing\\"
        return result

    def __eq__(self, rhs: typing.Any) -> builtins.bool:
        return isinstance(rhs, self.__class__) and rhs._values == self._values

    def __ne__(self, rhs: typing.Any) -> builtins.bool:
        return not (rhs == self)

    def __repr__(self) -> str:
        return \\"Operands(%s)\\" % \\", \\".join(
            k + \\"=\\" + repr(v) for k, v in self._values.items()
        )


__all__ = [
    \\"Hello\\",
    \\"Operands\\",
]

publication.publish()
",
  "my_python_module/submodule/_jsii/__init__.py": "import abc
import builtins
import datetime
import enum
import typing

import jsii
import publication
import typing_extensions

__jsii_assembly__ = jsii.JSIIAssembly.load(
    \\"pythonpackage\\", \\"0.0.0\\", __name__[0:-6], \\"pythonpackage@0.0.0.jsii.tgz\\"
)

__all__ = [
    \\"__jsii_assembly__\\",
]

publication.publish()
",
  "my_python_module/submodule/py.typed": "
",
}
`;
